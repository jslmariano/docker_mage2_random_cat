version: "3.6"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:

### MAGENTO APP ################################################
  app:
    build: ./docker/app
    links:
      - mysql
    depends_on:
      - mysql
    ports:
      - "8080:80"
    volumes:
      - "./src:/var/www/html"
      - "./modules:/var/www/modules"
    environment:
      PHP_EXTENSION_XDEBUG: ${PHP_EXTENSION_XDEBUG}
      STARTUP_COMMAND_1: "composer install"
      STARTUP_COMMAND_2: "test -e app/etc/env.php && echo 'Magento already installed' || bin/magento setup:install --base-url=http://127.0.0.1:8080/ --backend-frontname=${MAGENTO_ADMIN_FRONTNAME} --db-host=${MYSQL_DB_HOST} --db-name=${MYSQL_DATABASE} --db-user=${MYSQL_ROOT_USERNAME} --db-password=${MYSQL_ROOT_PASSWORD} --admin-firstname=${MAGENTO_ADMIN_FIRSTNAME} --admin-lastname=${MAGENTO_ADMIN_LASTNAME} --admin-email=${MAGENTO_ADMIN_EMAIL} --admin-user=${MAGENTO_ADMIN_USER} --admin-password=${MAGENTO_ADMIN_PASSWORD} --language=en_US --currency=USD --timezone=America/Chicago --cleanup-database --use-rewrites=1"
    networks:
      - frontend
      - backend

### phpMyAdmin ###########################################
  phpmyadmin:
    build: ./docker/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USER=root
      - MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "8082:80"
    depends_on:
      - mysql
    networks:
      - frontend
      - backend

### Mailhog ################################################
  mailhog:
    build: ./docker/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - frontend
      - backend

### Portainer ################################################
  portainer:
    build:
      context: ./docker/portainer
    volumes:
      - ${DATA_PATH_HOST}/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - 9010:9000
    networks:
      - backend

### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend


volumes:
  db-data: